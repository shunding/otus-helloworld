cmake_minimum_required(VERSION 3.2)

if(NOT $ENV{TRAVIS_BUILD_NUMBER})
    set(ENV{TRAVIS_BUILD_NUMBER} 1)
endif(NOT $ENV{TRAVIS_BUILD_NUMBER})

set(BUILD_NUMBER $ENV{TRAVIS_BUILD_NUMBER})

project(helloworld VERSION 0.0.${BUILD_NUMBER})

find_package(Boost COMPONENTS unit_test_framework REQUIRED)

configure_file(include/version.h.in ../include/version.h)

add_executable(helloworld_cli src/main.cpp)

add_library(helloworld lib/lib.cpp)

add_executable(test_main_cli tests/test_main.cpp)

set_target_properties(helloworld_cli test_main_cli PROPERTIES
    CXX_STANDARD 14
    CXX_STANDARD_REQUIRED ON
    COMPILE_OPTIONS -Wpedantic -Wall -Wextra
)

set_target_properties(test_main_cli PROPERTIES
    COMPILE_DEFINITIONS BOOST_TEST_DYN_LINK
    INCLUDE_DIRECTORIES ${Boost_INCLUDE_DIR}
)

target_link_libraries(helloworld_cli helloworld)

target_link_libraries(test_main_cli
    ${Boost_LIBRARIES}
    helloworld
)

install(TARGETS helloworld_cli RUNTIME DESTINATION bin)

set(CPACK_GENERATOR DEB)

set(CPACK_PACKAGE_VERSION_MAJOR "${PROJECT_VERSION_MAJOR}")
set(CPACK_PACKAGE_VERSION_MINOR "${PROJECT_VERSION_MINOR}")
set(CPACK_PACKAGE_VERSION_PATCH "${PROJECT_VERSION_PATCH}")

set(CPACK_PACKAGE_CONTACT alex.drozhak@me.com)

include(CPack)

enable_testing()

add_test(test_version_failed test_main_cli)

